const nodemailer = require("nodemailer");

const transporter = nodemailer.createTransport({
  logger: true,
  debug: true,
  host: "smtp-relay.brevo.com",
  port: 587,
  secure: false,
  auth: {
    user: process.env.BREVO_USER,
    pass: process.env.BREVO_PASS
  },
  tls: { ciphers: "SSLv3" }
});

transporter.verify()
  .then(() => console.log("‚úÖ SMTP verify: OK"))
  .catch(err => {
    console.warn("‚ö†Ô∏è SMTP verify failed:", err?.message || err);
  });

async function sendRegistrationEmail(to, firstName = "", lastName = "") {
  const fullName = `${firstName} ${lastName}`.trim();

  try {
    await transporter.sendMail({
      from: `–Ü–Ω—Å—Ç–∏—Ç—É—Ç –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ—ó –°—É–ø–µ—Ä–≤—ñ–∑—ñ—ó <${process.env.BREVO_USER}>`,
      replyTo: "profsupervision@gmail.com",
      envelope: { from: process.env.BREVO_USER, to },
      to,
      subject: "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é",
      html: `
        <div style="font-family: Arial, sans-serif; font-size: 16px; color: #333;">
          <p>–®–∞–Ω–æ–≤–Ω–∞/–∏–π <strong>${fullName}</strong>,</p>
          <p>
            –î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –¥–æ –æ—Å–æ–±–∏—Å—Ç–æ–≥–æ –∫–∞–±—ñ–Ω–µ—Ç—É –Ω–∞ –Ω–∞—à–æ–º—É —Å–∞–π—Ç—ñ 
            <a href="https://mamko-prof-supervision.com/" target="_blank">–Ü–Ω—Å—Ç–∏—Ç—É—Ç—É –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ—ó –°—É–ø–µ—Ä–≤—ñ–∑—ñ—ó</a>.
          </p>
          <p>
            –ù–∞—Ä–∞–∑—ñ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–µ—Ä–µ–±—É–≤–∞—î –Ω–∞ —Ä–æ–∑–≥–ª—è–¥—ñ. –ù–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –≤–æ–Ω–∞ –±—É–¥–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞, 
            —Ç–∞ –í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ª–∏—Å—Ç –∑ —É—Å—ñ–º–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ –¥–ª—è –≤—Ö–æ–¥—É —Ç–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è –∫–∞–±—ñ–Ω–µ—Ç–æ–º.
          </p>
          <p>
            –Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–Ω—É—Ç—å –∑–∞–ø–∏—Ç–∞–Ω–Ω—è, –≤–∏ –º–æ–∂–µ—Ç–µ –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—è –Ω–∞ –Ω–∞—à—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É:<br>
            <a href="mailto:profsupervision@gmail.com">profsupervision@gmail.com</a>
          </p>
          <p>–ó –ø–æ–≤–∞–≥–æ—é,<br><strong>–ö–æ–º–∞–Ω–¥–∞ IPS</strong></p>
          <p>
            <img src="/" alt="IPS Logo" style="height: 50px;" /><br>
            <a href="https://mamko-prof-supervision.com/">https://mamko-prof-supervision.com/</a><br>
            <a href="https://www.facebook.com/Profsupervision/">Facebook</a>
          </p>
        </div>
      `
    
    });
    console.log("üìß sendRegistrationEmail invoked:", { to, fullName });
    return { ok: true };
  } catch (error) {
    console.error("Failed to send registration email:", error);
    return { ok: false, error: error?.message || String(error) };
  }
}

module.exports = sendRegistrationEmail;
