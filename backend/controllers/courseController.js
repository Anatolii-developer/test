const Course = require('../models/Course');

// POST /api/courses
exports.createCourse = async (req, res) => {
  try {
    console.log("üì• New course request:", req.body); // –¥–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ

    const course = new Course(req.body);
    await course.save();

    res.status(201).json({ success: true, message: "–ö—É—Ä—Å —Å—Ç–≤–æ—Ä–µ–Ω–æ", course });
  } catch (error) {
    console.error("‚ùå Error creating course:", error.message);
    res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∫—É—Ä—Å—É", error: error.message });
  }
};


// GET /api/courses
exports.getCourses = async (req, res) => {
  try {
    const courses = await Course.find().sort({ createdAt: -1 });
    res.json(courses);
  } catch (error) {
    console.error("‚ùå Error fetching courses:", error.message, error.stack);
    res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∫—É—Ä—Å—ñ–≤", error: error.message });
  }
};

exports.getCourseById = async (req, res) => {
  try {
    const course = await Course.findById(req.params.id)
      .populate('participants', 'fullName email'); // –¢—ñ–ª—å–∫–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø–æ–ª—è

    if (!course) return res.status(404).json({ message: "–ö—É—Ä—Å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ" });
    res.json(course);
  } catch (error) {
    res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∫—É—Ä—Å—É", error: error.message });
  }
};

// PUT /api/courses/:id
exports.updateCourse = async (req, res) => {
  try {
    const updatedCourse = await Course.findByIdAndUpdate(req.params.id, req.body, { new: true });
    if (!updatedCourse) return res.status(404).json({ message: "–ö—É—Ä—Å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ" });
    res.json(updatedCourse);
  } catch (err) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –∫—É—Ä—Å—É:", err);
    res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
};

